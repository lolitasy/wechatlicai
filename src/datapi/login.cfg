var ghost = require('./cfg/ghost.js');
var gapi = require('./cmn/gapi.js');

exports.itfconf = function(){
	return {
		auth: false,
		type: "json",
		itfs: [
	        {
	            host: ghost.dscm.dcbusiness.addr,
	            port: ghost.dscm.dcbusiness.port,
	            iurl: "/wechatOauthTokenApp?actn=appLogin",
	            uuid: "wechatIndexApp",
	            meth: "post",
	            type: "sdcm",
	            next: [],
	            func: callFunc1
	        }

		]
	};
}
function callFunc1(req,res,fld,fle){
	// var ip = gapi.getIPv4(req.user.addr);

	// var username = gapi.getParameter(req,'username');
	// var password = gapi.getParameter(req,'password');
	// var data = {
	// 	"userId":111,
	// 	"username":username,
	// 	"password":password
	// }
	// console.log(JSON.stringify(data));
	// req.session.user={
	// 	"userId":data.userId,
	// 	"username":username
	// }
	// res.setHeader('Access-Control-Allow-Origin', 'http://wechat.cnaidai.com');
	// res.setHeader('Access-Control-Allow-Credentials', 'true');

	// res.jsonp(gapi.toResult(200, "请求成功",req.session.user));
    // return null;
	var username = gapi.getParameter(req, "username"),
		password = gapi.getParameter(req, "password");
	var ip = gapi.getIPv4(req.user.addr);
	if(gapi.emptyEqual(username ,"")) {
		res.jsonp(gapi.toResult(1, "用户名不能为空"));
		ghost.getLogger().info("[doCallFunc]IP：%s, service: datasvr.oauth.login, dc:wechatOauthTokenApp, message: 'param error', param: username=%s", ip, username);
		return null;
	}

	if(gapi.emptyEqual(password,"")) {
		res.jsonp(gapi.toResult(1, "密码不能为空"));
		ghost.getLogger().info("[doCallFunc]IP：%s, service: datasvr.oauth.login, dc:wechatOauthTokenApp, message: 'param error', param: password", ip);
		return null;
	}
	req.user.code = null;
	ghost.getLogger().info("[doCallFunc]IP：%s, service: datasvr.oauth.login, dc:wechatOauthTokenApp, message: 'param', param: username=%s,password,ip=%s", ip, username,ip);
	return {
		"claz" : "['java.lang.String','java.lang.String','java.lang.String']",
		"json" : [username, password, ip]
	};
}

exports.itfleft = function(req,res,fld,fle) {
	var ip = gapi.getIPv4(req.user.addr);
		if(!req.rslt['wechatOauthTokenApp']){
			ghost.getLogger().error("[doOutput]IP：%s, service: datasvr.oauth.login, dc:wechatOauthTokenApp, message: 'rslt is null', rslt: %s", ip, JSON.stringify(req.rslt['wechatOauthTokenApp']));
			return gapi.toResult(500, "系统异常");
		}
		if(gapi.emptyNoequal(req.rslt['wechatOauthTokenApp'].code, 0)&&gapi.emptyNoequal(req.rslt['wechatOauthTokenApp'].code, 4000)) {
			//这里根据后端服务返回的code值不同提示信息不同
			if(gapi.emptyEqual(req.rslt['wechatOauthTokenApp'].message, "")) {
				req.rslt['wechatOauthTokenApp'].message = "登录失败";
			}
			var username = gapi.getParameter(req, "username");
			ghost.getLogger().error("[doOutput]IP：%s, service: datasvr.oauth.login, dc:wechatOauthTokenApp, message: 'rslt error', rslt: %s", ip, JSON.stringify(req.rslt['wechatOauthTokenApp']));
			return gapi.toResult(1, req.rslt['wechatOauthTokenApp'].message);
		}
		if(req.rslt['wechatOauthTokenApp'].code==0){
			var userDTO = req.rslt['wechatOauthTokenApp'].userDTO;
			var userName = userDTO.username,
			 	userId = userDTO.userId,
		 		phone = userDTO.phone;
			req.session.user = {
				"userId":userId,
				"userName":userName,
				"phone":phone
			};
			if (!userId) {
				ghost.getLogger().error("[doOutput]IP：%s, service: datasvr.oauth.login, dc:wechatOauthTokenApp.appLogin, message: 'rslt error: userId=0', rslt: %s", ip, JSON.stringify(req.rslt['wechatOauthTokenApp']));			
			}
			return gapi.toResult(200, null, req.rslt['wechatOauthTokenApp']);
		}else{
			// 密码错误
			return gapi.toResult(null, null, req.rslt['wechatOauthTokenApp']);
		}
}


